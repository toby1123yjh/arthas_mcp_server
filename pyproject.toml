[project]
name = "arthas-mcp-server"
version = "0.1.0"
description = "Java Performance Analysis & Diagnostics - LLM-powered MCP Server for real-time monitoring, memory analysis, thread profiling, and system optimization"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Arthas MCP Team", email = "team@arthas-mcp.com"}
]
license = {text = "MIT"}
keywords = ["arthas", "java", "performance", "analysis", "diagnostics", "monitoring", "profiling", "optimization", "mcp", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Debuggers",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "fastmcp>=2.11.3",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "uvicorn>=0.35.0",
    "websockets>=12.0",
    "aiofiles>=23.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
arthas-mcp = "src.server:main"

[project.urls]
Homepage = "https://github.com/arthas-mcp/arthas-mcp-server"
Repository = "https://github.com/arthas-mcp/arthas-mcp-server"
Issues = "https://github.com/arthas-mcp/arthas-mcp-server/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
